{
	"url": "http://localhost:8000/api/v1/",
	"endpoints": {
		"users": {
			"get": {
				"description": "return all registered users",
				"working": true,
				"request": {},
				"response": {
					"users": [
						{
							"email": "string",
							"id": "string",
							"username": "string"
						}
					]
				}
			},
			"post": {
				"description": "Register a new user",
                "working": true,
				"request": {
					"username": "string",
					"email": "string",
					"password": "string",
					"verify_password": "string"
				},
				"response": {
					"token": "string",
					"user": {
						"username": "string",
						"id": "string",
						"email": "string"
					}
				},
				"error": {
                    "working": false,
                    "todo": "replace exception with an error message",
					"error": "string"
				}
			}
		},
		"user": {
			"get /:id":{
				"description": "returns a user, like if there's an existing token in the browser",
                "working": true,
                "headers": {
                  "Authorization": "token string"
                },
				"request": {},
				"response": {
					"user": {
						"email": "string",
						"id": "string",
						"username": "string"
					}
				},
				"error": {
                    "working": true
					"error": "string"
				}
			},
			"post": {
				"description": "login user",
                "working": true,
				"request": {
					"email": "string",
					"password": "password"
				},
				"response": {
					"user": {
						"email": "string",
						"id": "string",
						"username": "string"
					}
				},
				"error": {
                    "working": true,
					"error": "string"
				}
			},
			"put /:id": {
				"description": "change username, password, email",
                "working": false,
                "todo": "sends back 200 with null as response",
                "headers": {
                  "Authorization": "token string"
                },
				"request": {
					"username": "string",
					"email": "string",
					"current_password": "string",
					"password": "string",
					"verify_password": "string"
				},
				"response": {
					"user": {
						"email": "string",
						"id": "string",
						"username": "string"
					}
				},
				"error": {
                    "working": "false, send with error property in object",
					"error": "string"
				}
			},
			"delete /:id": {
				"description": "delete user instance",
                "working": false,
                "todo": "delete() got an unexpected keyword argument 'id'",
                "headers": {
                  "Authorization": "token string"
                },
				"request": {},
				"response": {
					"id": "string"
				},
				"error": {
					"error": "string"
				}
			}
		}
	}
}